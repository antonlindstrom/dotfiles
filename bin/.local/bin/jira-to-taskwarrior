#!/bin/bash

cfg="$HOME/.kanban.local.json"
endpoint=$(jq -r .endpoint "$cfg")
username=$(jq -r .username "$cfg")
password=$(jq -r .password "$cfg")

function search() {
	payload="{
			\"jql\": \"$1\",
			\"startAt\": 0,
			\"maxResults\": 100,
			\"fields\": [
				\"summary\",
				\"status\"
			],
			\"fieldsByKeys\": false
		}"

	curl -s --request POST \
		--url "$endpoint/rest/api/3/search"  \
		-u "$username:$password" \
		--header 'Accept: application/json' \
		--header 'Content-Type: application/json' \
		--data "$payload" | jq -r '.issues[] | "\(.key): \(.fields.summary)"'
}

function cmd_working_on() {
	search 'assignee = currentUser()'
}

function add_task() {
	issue_id=$(echo "$line" | cut -d: -f 1)

	task add "\"$1\"" project:fcg prio:M
	id=$(task +LATEST ids)
	task "$id" annotate "$endpoint/browse/$issue_id"
}

TASKS=()

IFS=$'\n'
for line in $(cmd_working_on)
do
	issue_id=$(echo "$line" | cut -d: -f 1)

	# Skip upcoming tasks.
	if task next 2>/dev/null | grep "$issue_id" >/dev/null; then
		continue
	fi

	# Skip completed tasks.
	if task completed 2>/dev/null | grep "$issue_id" >/dev/null; then
		continue
	fi

	TASKS+=("$line")
done

task="$(printf '%s\n' "${TASKS[@]}" | fzf)"
if [ -n "$task" ]; then
	add_task "$task"
fi

# vim: ft=sh
