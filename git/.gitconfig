[include]
	path = ~/.gitconfig.private
[core]
	excludesfile = ~/.gitignore
	editor = /usr/bin/vim
[help]
	autocorrect = 1
[color]
	ui = true
[alias]
	lol = log --oneline --decorate --graph
	lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
	co = checkout -b
	com = checkout master
	uncommit = reset --soft HEAD^
	rbr = "!for branch in `git branch -r | grep -v HEAD`;do echo `git -c color.ui=always log --format='%ai %Cred%h%Creset %C(green)(%cr)%Creset %C(bold blue)<%an>%Creset' -1 $branch` $branch; done | sort -r"
	recent = for-each-ref --sort=-committerdate refs/heads/ --format='%(HEAD) %(align:15,left)%(committerdate:relative)%(end) %(align:30,left)%(color:bold blue)%(authorname)%(end) %(color:bold red)%(objectname:short)%(color:reset) %(color:bold yellow)%(refname:short) %(upstream:track)'
	delete-merged-branches = "!git branch --merged | grep -v master | xargs git branch --delete"
	delete-remote-branch = push -d origin
	prune-branches = fetch -p
	track-remote-branches = "!for remote in `git branch -r | grep -v 'origin/HEAD'`; do git branch --track ${remote#origin/} $remote; done"
	sprint-overview = log --all --since='2 weeks' --no-merges --pretty=format:'%Cred%h%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
	sprint-stats = shortlog -sn --since='2 weeks'
	sprint-merges = log --all --since='2 weeks' --merges --pretty=format:'%Cred%h%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
	sprint-mine = log --since='2 weeks' --no-merges --author=anton.lindstrom@frontiercargroup.com --pretty=format:'%Cred%h%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
	all-merges = log --all --merges --pretty=format:'%Cred%h%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
	all-mine = log --all --no-merges --author=anton.lindstrom@frontiercargroup.com --pretty=format:'%Cred%h%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
	today = log --since=00:00:00 --all --no-merges --pretty=format:'%Cred%h%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
	graph = log --graph --all --decorate --stat --date=iso
	lfm = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit master..
	branches = branch -a --color -v
	pr = "!git fetch origin pull/$1/head:pr$1"
	ifup = "!git log --oneline --color | fzf --ansi --height=40% | awk '{ print $1 }' | xargs git commit --fixup"
	irst = "!git log --oneline --color | fzf --ansi --height=40% | awk '{ print $1 }' | xargs git reset"
	irbs = "!git log --oneline --color | fzf --ansi --height=40% | awk '{ print $1 }' | xargs git rebase -i"
	ico = "!git branch --color | grep -v '*' | fzf --ansi --prompt=\"current: '$(git rev-parse --abbrev-ref HEAD)'> \" | xargs git checkout"
	isprint-mine = "!git sprint-mine | fzf --ansi | awk '{ print $1 }' | xargs git show"
	meld = difftool -g
	meld-dd = difftool --dir-diff -g
	pom = pull origin master
[push]
	default = current
[pull]
	default = current
[diff]
	compactionHeuristic = 1
	guitool = meld
	tool = vimdiff
[submodule]
	fetchJobs = 4
[rebase]
	autosquash = true
[ghq]
	root = ~/code/src
[http "https://gopkg.in"]
	followRedirects = true
[url "ssh://git@github.com/"]
	insteadOf = https://github.com/
[credential]
	helper = cache --timeout=600
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[merge]
	tool = vimdiff
	conflictstyle = diff3
[mergetool]
	prompt = false
[sendemail]
	smtpserver = /usr/bin/msmtp
	smtpserveroption=-a
	smtpserveroption=lindstrom.sh
